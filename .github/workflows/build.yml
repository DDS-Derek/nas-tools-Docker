name: 构建 NAStool 镜像  

on:
    workflow_dispatch:
    release:
        types: [published]

jobs:
  armv7:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: full/armv7.Dockerfile
          platforms: |
            linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:armv7

  arm64v8:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: full/arm64v8.Dockerfile
          platforms: |
            linux/arm64/v8
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:arm64v8

  amd64:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@master

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v2

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v2
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: full/amd64.Dockerfile
          platforms: |
            linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:amd64

  tag:
    needs: [armv7, arm64v8, amd64]
    name: Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: create version tag
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/nas-tools:latest \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:armv7 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:arm64v8 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:amd64

  tag-version:
    needs: [armv7, arm64v8, amd64]
    name: Tag-Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get latest release tag
        id: set-version
        run: |
          NT_VERSION=$(wget --no-check-certificate -qO- https://raw.githubusercontent.com/NAStool/nas-tools/master/version.py | sed -ne "s/APP_VERSION\s=\s'v\(.*\)'/\1/gp")
          echo "::set-output name=version::${NT_VERSION}"

      - name: Set up QEMU
        id: qemu
        if: steps.set-version.outputs.version != ''
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        if: steps.set-version.outputs.version != ''
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Login to DockerHub
        if: steps.set-version.outputs.version != ''
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: create version tag
        if: steps.set-version.outputs.version != ''
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/nas-tools:${{ steps.set-version.outputs.version }} \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:armv7 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:arm64v8 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:amd64

      - name: create version tag arm64v8
        if: steps.set-version.outputs.version != ''
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/nas-tools:${{ steps.set-version.outputs.version }}-arm64v8 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:arm64v8

      - name: create version tag armv7
        if: steps.set-version.outputs.version != ''
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/nas-tools:${{ steps.set-version.outputs.version }}-armv7 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:armv7
          
      - name: create version tag amd64
        if: steps.set-version.outputs.version != ''
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/nas-tools:${{ steps.set-version.outputs.version }}-amd64 \
            ${{ secrets.DOCKER_USERNAME }}/nas-tools:amd64